{"version":3,"sources":["component/Timer/Timer.jsx","component/ControlButtons/ControlButtons.jsx","component/StopWatch/StopWatch.jsx","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","className","Math","floor","time","slice","dtr","toFixed","ControlButtons","StartButton","onClick","handleStart","ActiveButtons","handleReset","handlePauseResume","isPaused","toTimeString","ProcessButtons","handleTurningPoint","turningPoint","handleMaillardPoint","maillardPoint","maillardPeriod","maillardRatio","handle1stCrack","firstCrack","developmentPeriod","handleDrop","dropPoint","active","StopWatch","useState","isActive","setIsActive","setIsPaused","Date","now","startTime","setStartTime","setTime","setTurningPoint","setMaillardPoint","setMaillardPeriod","setMaillardRatio","useEffect","set1stCrack","setDropPoint","setDevelopmentPeriod","setDtr","React","interval","setInterval","clearInterval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f92502b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Timer.css\";\n\nexport default function Timer(props) {\nreturn (\n\t<div className=\"timer\">\n\t<span className=\"digits\">\n\t\t{(\"0\" + Math.floor((props.time / 60000) % 60)).slice(-2)}:\n\t</span>\n\t<span className=\"digits\">\n\t\t{(\"0\" + Math.floor((props.time / 1000) % 60)).slice(-2)}.\n\t</span>\n\t<span className=\"digits mili-sec\">\n\t\t{(\"0\" + ((props.time / 10) % 100)).slice(-2)}\n\t</span>\n\t<div className=\"appendix\">\n\t\t<span>DTR(%): </span>\n\t\t<span>\n\t\t\t{ props.dtr > 0 ? props.dtr.toFixed(2) : \"--\" }\n\t\t</span>\n\t</div>\n\t</div>\n);\n}\n\n","import React from \"react\";\nimport \"./ControlButtons.css\";\n\nexport default function ControlButtons(props) {\nconst StartButton = (\n\t<div className=\"btn btn-one btn-start\"\n\t\tonClick={props.handleStart}>\n\tStart\n\t</div>\n);\n\nconst ActiveButtons = (\n    <div className=\"btn-grp\">\n        <div className=\"btn btn-two\"\n            onClick={props.handleReset}>\n            Reset\n        </div>\n        <div className=\"btn btn-one\"\n            onClick={props.handlePauseResume}>\n            {props.isPaused ? \"Resume\" : \"Pause\"}\n        </div>\n    </div>\n);\n\nfunction toTimeString(time) {\n    if (time <= 0)\n        return \"--:--\";\n    return (\n        (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) + \":\" + \n        (\"0\" + Math.floor((time / 1000) % 60)).slice(-2)\n    );\n}\n\n// const ProcessButtons = (\n//     <div className=\"btn-grp\">\n//         <div className=\"btn btn-process\"\n//             onClick={props.handleTurningPoint}>\n//             Turning Point\n//         </div>\n//         <div className=\"btn btn-process\"\n//             onClick={props.handleYellowPoint}>\n//             Yellow (130-160)\n//         </div>\n//         <div className=\"btn btn-process\"\n//             onClick={props.handleMaillardPoint}>\n//             Maillard (160)\n//         </div>\n//         <div className=\"btn btn-process\"\n//             onClick={props.handlePre1stCrack}>\n//             pre 1st crack\n//         </div>\n//         <div className=\"btn btn-process\"\n//             onClick={props.handle1stCrack}>\n//             1st crack begin\n//         </div>\n//         <div className=\"btn btn-process\"\n//             onClick={props.handle1stCrackEnd}>\n//             1st crack end\n//         </div>\n//         <div className=\"btn btn-process\"\n//             onClick={props.handle2ndCrack}>\n//             2nd crack begin\n//         </div>\n//         <div className=\"btn btn-process\"\n//             onClick={props.handle2ndCrackEnd}>\n//             2nd crack end\n//         </div>\n//         <div className=\"btn btn-process\"\n//             onClick={props.handleDrop}>\n//             drop\n//         </div>\n// </div>\n// );\nconst ProcessButtons = (\n    <div className=\"btn-grp-process\">\n         <div className=\"btn btn-process\"\n             onClick={props.handleTurningPoint}>\n             <span>Turning Point</span>\n             <span>{toTimeString(props.turningPoint)}</span>\n         </div>\n        <div className=\"btn btn-process\"\n             onClick={props.handleMaillardPoint}>\n             <span>Maillard Start(160&deg;C)</span>\n             <span>{toTimeString(props.maillardPoint)}</span>\n         </div>\n         <div className=\"info-process\">\n         <span>Maillard Phase</span>\n            <span>\n            <span>{toTimeString(props.maillardPeriod)}&nbsp;&nbsp;&nbsp;</span>\n            <span>{(props.maillardRatio) > 0 ? props.maillardRatio.toFixed(1) : \"--\"}%</span>\n            </span>\n        </div>\n        <div className=\"btn btn-process\"\n            onClick={props.handle1stCrack}>\n            <span>1st crack</span>\n            <span>{toTimeString(props.firstCrack)}</span>\n        </div>\n        <div className=\"info-process\">\n         <span>Development Phase</span>\n            <span>\n            <span>{toTimeString(props.developmentPeriod)}&nbsp;&nbsp;&nbsp;</span>\n            <span>{(props.dtr) > 0 ? props.dtr.toFixed(1) : \"--\"}%</span>\n            </span>\n        </div>\n        <div className=\"btn btn-process\"\n            onClick={props.handleDrop}>\n            <span>drop</span>\n            <span>{toTimeString(props.dropPoint)}</span>\n        </div>\n</div>\n);\n\nreturn (\n\t<div className=\"Control-Buttons\">\n\t<div>{props.active ? ActiveButtons : StartButton}</div>\n    <div> {props.active ? ProcessButtons : ''} </div>\n\t</div>\n);\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport \"./StopWatch.css\";\nimport Timer from \"../Timer/Timer\";\nimport ControlButtons from \"../ControlButtons/ControlButtons\";\n\nfunction StopWatch() {\nconst [isActive, setIsActive] = useState(false);\nconst [isPaused, setIsPaused] = useState(true);\nconst [startTime, setStartTime] = useState(Date.now());\nconst [time, setTime] = useState(0);\n\n// process monitor state for roaster /////////\n//\n\nconst [turningPoint, setTurningPoint] = useState(0);\n// const [yellowPoint, setYellowPoint] = useState(-1);\nconst [maillardPoint, setMaillardPoint] = useState(0);\nconst [maillardPeriod, setMaillardPeriod] = useState(0);\nconst [maillardRatio, setMaillardRatio] = useState(0);\nuseEffect( () => {\n    if (firstCrack > 0)\n    {\n        setMaillardPeriod( (maillardPeriod) => (firstCrack - maillardPoint));\n    }\n    else if (maillardPoint > 0)\n    {\n        setMaillardPeriod( (maillardPeriod) => (time - maillardPoint));\n        //setMaillardRatio( (maillardRatio) => ((time - maillardPoint) * 100 / time) );\n    }\n});\n// const [pre1stCrack, setPre1stCrack] = useState(-1);\nconst [firstCrack, set1stCrack] = useState(0);\n// const [firstCrackEnd, set1stCrackEnd] = useState(-1);\n// const [secondCrack, set2ndCrack] = useState(-1);\n// const [secondCrackEnd, set2ndCrackEnd] = useState(-1);\nconst [dropPoint, setDropPoint] = useState(0);\nconst [developmentPeriod, setDevelopmentPeriod] = useState(0);\nconst [dtr, setDtr] = useState(0);      // development time ratio\nuseEffect(() => {\n\n    if (dropPoint > 0) \n    {\n        if (firstCrack > 0)\n        {\n            // calculate actual dtr\n            setDtr( (dtr) => ((dropPoint - firstCrack) * 100 / dropPoint) ); \n            setDevelopmentPeriod ( (developmentPeriod) => (dropPoint - firstCrack));\n            setMaillardRatio ( (maillardRatio) =>  (firstCrack - maillardPoint) * 100 / dropPoint);\n        }\n        else\n        {\n            setDtr(0);\n        }\n    }\n    else if (firstCrack > 0)\n    {\n        // calculate real-time dtr\n        setDevelopmentPeriod ( (developmentPeriod) => (time - firstCrack));\n        setDtr( (dtr) => ((time - firstCrack) * 100 / time) );\n    }\n});\n\nconst handleTurningPoint = () => {\n    // T_diff > 0\n    setTurningPoint(time);\n}\n\n// const handleYellowPoint = () => {\n//     // at T = 130 - 140\n//     setYellowPoint(time);\n// }\n\nconst handleMaillardPoint = () => {\n    // at T = 160 - 200\n    setMaillardPoint(time);\n}\n\n// const handlePre1stCrack = () => {\n//     // at T = 190 - 200\n//     setPre1stCrack(time);\n// }\n\nconst handle1stCrack = () => {\n    set1stCrack( () => time);\n    setDtr( () => 0);\n}\n\n// const handle1stCrackEnd = () => {\n//     set1stCrackEnd(time);\n// }\n\n// const handle2ndCrack = () => {\n//     set2ndCrack(time);\n// }\n\n// const handle2ndCrackEnd = () => {\n//     set2ndCrackEnd(time);\n// }\n\nconst handleDrop = () => {\n    setDropPoint(time);\n    setIsPaused(true);\n}\n\n\n// process monitor functions for roaster ////////\n\n\n\nReact.useEffect(() => {\n\tlet interval = null;\n\n\tif (isActive && isPaused === false) {\n\tinterval = setInterval(() => {\n\t\t//setTime((time) => time + 100);\n        setTime((time) => Date.now() - startTime);\n\t}, 40);\n\t} else {\n\tclearInterval(interval);\n\t}\n\treturn () => {\n\tclearInterval(interval);\n\t};\n}, [isActive, isPaused]);\n\nconst handleStart = () => {\n    setStartTime(Date.now());\n\tsetIsActive(true);\n\tsetIsPaused(false);\n};\n\nconst handlePauseResume = () => {\n\tsetIsPaused(!isPaused);\n};\n\nconst handleReset = () => {\n\tsetIsActive(false);\n\tsetTime(0);\n    setDtr(0);\n\n    setTurningPoint(0);\n    // setYellowPoint(0);\n    setMaillardPoint(0);\n    setMaillardRatio(0);\n    // setPre1stCrack(0);\n    set1stCrack(0);\n    // set1stCrackEnd(0);\n    // set2ndCrack(0);\n    // set2ndCrackEnd(0);\n    // set2ndCrackEnd(0);\n    setDropPoint(0);\n};\n\nreturn (\n\t<div className=\"stop-watch\">\n\t<Timer time={time} dtr={dtr}/>\n\t<ControlButtons\n\t\tactive={isActive}\n\t\tisPaused={isPaused}\n\t\thandleStart={handleStart}\n\t\thandlePauseResume={handlePauseResume}\n\t\thandleReset={handleReset}\n\n        handleTurningPoint={handleTurningPoint}\n        turningPoint={turningPoint}\n        // handleYellowPoint={handleYellowPoint}\n        handleMaillardPoint={handleMaillardPoint}\n        maillardPoint={maillardPoint}\n        maillardPeriod={maillardPeriod}\n        maillardRatio={maillardRatio}\n        // handlePre1stCrack={handlePre1stCrack}\n        handle1stCrack={handle1stCrack}\n        firstCrack={firstCrack}\n        developmentPeriod={developmentPeriod}\n        dtr={dtr}\n        // handle1stCrackEnd={handle1stCrackEnd}\n        // handle2ndCrack={handle2ndCrack} \n        // handle2ndCrackEnd={handle2ndCrackEnd}        \n        handleDrop={handleDrop}\n        dropPoint={dropPoint}\n\t/>\n\t</div>\n);\n}\n\nexport default StopWatch;\n\n","import './App.css';\nimport StopWatch from './component/StopWatch/StopWatch';\n\nfunction App() {\nreturn (\n\t<div className=\"App\">\n\t<StopWatch />\n\t</div>\n);\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}